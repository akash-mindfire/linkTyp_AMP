import Head from "next/head";
import React, { useContext, useEffect, useState } from "react";
import { useRouter } from "next/router";
import { Inter } from "next/font/google";
import User from "./login";
import Navbar from "@/components/Navbar";
import Links from "@/components/Links";
import MobileMockups from "@/components/MobileMockups";
import Appearance from "@/components/Appearance";
// import Analytics from '@/components/analytics'
import UserSettings from "@/components/UserSettings";
import axios from "axios";
const inter = Inter({ subsets: ["latin"] });
import { UserContext } from "./userContex";
import Cookies from "js-cookie";
import { GetServerSideProps } from "next";
export default function DashBoard() {
  const [data, setData] = useState();

  const token = Cookies.get("access_token");
  useEffect(() => {
    getData();
  }, []);

const getData = async () => {
    console.log("clicked");
    await axios
      .get("https://api.linktyp.com/api/getdata", {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      })
      .then((res) => {
        console.log(res);
        setData(res.data);
      })
      .catch((err) => {
        console.log(err);
      });
  };

  console.log(data);

    const userName = data?.data[0]?.username
    console.log(userName);

  // console.log(userData.data[0].containerLinks[0].link)
  const [activeComponent, setActiveComponent] = useState("link");

  const handleAppearanceClick = () => {
    setActiveComponent("appearance");
  };

  const handleLinkClick = () => {
    setActiveComponent("link");
  };

  const handleAnalyticsClick = () => {
    setActiveComponent("analytics");
  };

  const handleSettingsClick = () => {
    setActiveComponent("Settings");
  };

  // if (!userData || !userData.data || !userData.data[0] || !userData.data[0].containerLinks) {
  //   return <p>Loading...</p>;
  // }

  return (
  
      <div className="w-full bg-white scroll-smooth">
        <Head>
          <title>Linktyp</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/Frame 5.svg" />
        </Head>
        <nav>
          <Navbar
            onAppearanceClick={handleAppearanceClick}
            onLinkClick={handleLinkClick}
            onAnalyticsClick={handleAnalyticsClick}
            onSettingsClick={handleSettingsClick}
            props={undefined}
            ProfileData={data}
          />
        </nav>
        <div className="flex">
          <div className="w-full border-r-2 md:pt-20 pt-28 md:w-1/2 ">
            {activeComponent === "appearance" && <Appearance getAllData={data}/>}
            {activeComponent === "link" && <Links />}
            {/* {activeComponent === 'analytics' && <Analytics />} */}
            {activeComponent === "Settings" && <UserSettings getAllData ={data} getProfileData={getData}/>}
          </div>
          <div className="justify-center hidden border-l-2 md:w-1/2 md:flex">
            <div className="fixed">
              <MobileMockups data={userName}/>
            </div>
          </div>
        </div>
      </div>

  );
}
export const getServerSideProps: GetServerSideProps = async (context) => {
  const { req } = context;

  const cookies = req.cookies;

  console.log("cookiee", cookies.access_token);

  if (!cookies.access_token) {
    // Redirect to login page if user is not authenticated
    return {
      redirect: {
        destination: "/",
        permanent: false,
      },
    };
  }
  return {
    props: { cookies },
  };
};
